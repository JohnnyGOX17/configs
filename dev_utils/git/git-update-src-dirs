#!/bin/bash
# Automate `git pull` of `src` directories

# Colors for printing
BLU='\033[1;34m'
NC='\033[0m'

pushd ~/src > /dev/null || exit

# iterate through directories in src/ directory to automatically pull
# find is used to better handled non-alphanumeric directories (-1 ignore ./)
dirCount=$(( $(find ./ -maxdepth 1 -type d | wc -l) - 1 ))
iter=0
for d in */ ; do
  pushd "$d" > /dev/null || exit
  percent=$(awk "BEGIN { pc=100*${iter}/${dirCount}; i=int(pc); print (pc-i<0.5)?i:i+1 }")
  echo -en "\r\033[K ${BLU}[${percent}%]${NC} ${d%/}"
  if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" ]; then
    # Get remote (often 'origin')
    repoRemote="$(git remote)"
    # Get default branch from remote
    defBranch="$(git remote show "$repoRemote" | sed -n '/HEAD branch/s/.*: //p' )"

    # get all updates from remote and merge only default branch, then switch back to current branch
    curr_branch=$(git symbolic-ref --short HEAD)
    git fetch "$repoRemote"
    git checkout -q "$defBranch"
    git merge --ff-only -q "$repoRemote/$defBranch"
    git checkout -q "$curr_branch"
  fi;
  popd > /dev/null || exit

  iter=$((iter + 1))
done
echo -en "\r\033[K"
echo ""

# clear Git update file
echo "" > /tmp/sys_git_updates

popd > /dev/null || exit

