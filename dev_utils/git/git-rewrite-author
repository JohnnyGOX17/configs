#!/bin/bash
# Rewrite author history matching a certain email

usage() { echo -e 'Usage:\n\tgit-rewrite-author old-email@example.com new-name new-email@example.com'; }

if [ $(git rev-parse --is-inside-work-tree 2> /dev/null) ]; then
  OLD_EMAIL=$1
  CORRECT_NAME=$2
  CORRECT_EMAIL=$3
  shift 3
  if [ -z "$OLD_EMAIL" ]; then
    echo "Old email is missing"
    usage
    exit 1
  fi
  if [ -z "$CORRECT_NAME" ]; then
    echo "Correct name is missing"
    usage
    exit 2
  fi
  if [ -z "$CORRECT_EMAIL" ]; then
    echo "Correct email is missing"
    usage
    exit 3
  fi
  echo "Re-writing history matching <${OLD_EMAIL}> to '${CORRECT_NAME}<${CORRECT_EMAIL}>'"
  git filter-branch --env-filter "
    if [ \"\$GIT_COMMITTER_EMAIL\" = \"${OLD_EMAIL}\" ]
    then
      export GIT_COMMITTER_NAME=\"${CORRECT_NAME}\"
      export GIT_COMMITTER_EMAIL=\"${CORRECT_EMAIL}\"
    fi
    if [ \"\$GIT_AUTHOR_EMAIL\" = \"${OLD_EMAIL}\" ]
    then
      export GIT_AUTHOR_NAME=\"${CORRECT_NAME}\"
      export GIT_AUTHOR_EMAIL=\"${CORRECT_EMAIL}\"
    fi
    " $@ --tag-name-filter cat -- --branches --tags
else
  echo "Not in a git directory!"
fi;
