return {
  "hedyhli/outline.nvim",
  lazy = true,
  cmd = { "Outline", "OutlineOpen" },
  keys = { -- Example mapping to toggle outline
    { "<leader>y", "<cmd>Outline<CR>", desc = "Toggle outline, shows LSP symbol tree view on thr e right" },
  },
  opts = {
    outline_window = {
      show_cursorline = true,
      hide_cursor = true,
    },
    symbols = {
      icons = {
        File = { icon = "", hl = "Identifier" },
        Module = { icon = "󰕳", hl = "Include" },
        Namespace = { icon = "", hl = "Include" },
        Package = { icon = "", hl = "Include" },
        Class = { icon = "", hl = "Type" },
        Method = { icon = "", hl = "Function" },
        Property = { icon = "", hl = "Identifier" },
        Field = { icon = "", hl = "Identifier" },
        Constructor = { icon = "", hl = "Special" },
        Enum = { icon = "", hl = "Type" },
        Interface = { icon = "", hl = "Type" },
        Function = { icon = "ƒ", hl = "Function" },
        Variable = { icon = "󰫧", hl = "Constant" },
        Constant = { icon = "", hl = "Constant" },
        String = { icon = "𝓐", hl = "String" },
        Number = { icon = "#", hl = "Number" },
        Boolean = { icon = "󰊾", hl = "Boolean" },
        Array = { icon = "", hl = "Constant" },
        Object = { icon = "", hl = "Type" },
        Key = { icon = "", hl = "Type" },
        Null = { icon = "󰟢", hl = "Type" },
        EnumMember = { icon = "", hl = "Identifier" },
        Struct = { icon = "", hl = "Structure" },
        Event = { icon = "", hl = "Type" },
        Operator = { icon = "", hl = "Identifier" },
        TypeParameter = { icon = "", hl = "Identifier" },
        Component = { icon = "󰡀", hl = "Function" },
        Fragment = { icon = "", hl = "Constant" },
      },
    },
  },
}
